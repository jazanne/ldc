var d="405BFF",f="3DD6F5",u="A34FDE",c={script:"jq 'keys' ~/.config/ldc.json",postProcess:t=>JSON.parse(t).map(n=>({name:n,insertValue:n,description:n}))},l={script(t){let e="./run.sh projects list",n=i(t,m);n&&(e+=` --config ${n}`);let r=i(t,g);return r&&(e+=` --config-file ${r}`),e},postProcess(t){return t.split(`
`).reduce((e,n)=>{let r=n.match(/^\| (?<key>[^\s]+) +\| (?<name>.+\b)\s+\|$/);if(r!==null){let{key:a,name:s}=r.groups;e.push({name:a,insertValue:a,description:s,icon:`fig://template?color=${d}&badge=P`})}return e},[])}},p={script(t){let e="./run.sh environments list",n=i(t,m);n&&(e+=` --config ${n}`);let r=i(t,g);return r&&(e+=` --config-file ${r}`),e},postProcess(t){return t.split(`
`).reduce((e,n)=>{let r=n.match(/^\| (?<key>[^\s]+) +\| (?<name>.+\b)\s+\|$/);if(r!==null){let{key:a,name:s}=r.groups;e.push({name:a,insertValue:a,description:s,icon:`fig://template?color=${f}&badge=E`})}return e},[])}},o={script(t){let e="./run.sh flags list",n=i(t,m);n&&(e+=` --config ${n}`);let r=i(t,g);return r&&(e+=` --config-file ${r}`),e},postProcess(t){return t.split(`
`).reduce((e,n)=>{let r=n.match(/^\| (?<key>[^\s]+) +\| (?<name>.+\b)\s+\| (?<partialDescription>.+)\|/);if(r!==null){let{key:a,name:s}=r.groups;e.push({name:a,insertValue:a,description:s,icon:`fig://template?color=${u}&badge=\u2691`})}return e},[])}},i=(t,e)=>{let n=v(t,e);return n>-1?t[n+1]:""},v=(t,e)=>{for(let n of e.name){let r=t.indexOf(n);if(r>-1)return r}return-1},m={name:["--config"],description:"Configuration to use",args:[{name:"config name",generators:c}]},g={name:["--config-file"],description:"Configuration file to use",args:[{name:"config file path",template:"filepaths"}]},k={name:"ldc",description:"ldc is a command-line api client for LaunchDarkly",subcommands:[{name:"configs",description:"Manage configurations",subcommands:[{name:"add",description:"add config <config name> <api token> <project> <environment> [server url]",args:[{name:"config name"},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:"set",description:"Change configuration <config name>",args:[{name:"config name",generators:c}]},{name:["rename","rn","mv"],description:"Rename config <config name> <new name>",args:[{name:"config name",generators:c},{name:"new name"}]},{name:["edit","update"],description:"Update config: <config name> <api token> <project> <environment> [server url]",args:[{name:"config name",generators:c},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:["rm","remove","delete","del"],description:"Remove config: <config name>",args:[{name:"config name",generators:c}]}]},{name:"projects",description:"Create, list, view, and delete projects",subcommands:[{name:"list",description:"List projects"},{name:"show",description:"View project details",args:[{name:"project key",generators:l,debounce:!0}]},{name:["create","new"],description:"Create a project",args:[{name:"project key"}]},{name:["delete","remove"],description:"Delete a project",args:[{name:"project key",isDangerous:!0,generators:l,debounce:!0}]}]},{name:["environments","environment","envs","env","e"],description:"Create, list, view, and delete environments",subcommands:[{name:["list","ls","l"],description:"List environments"},{name:"show",description:"View environments details",args:[{name:"environments key",generators:p,debounce:!0}]},{name:["create","new","c"],description:"Create an environment",args:[{name:"project key"}]},{name:["delete","remove","d","del","rm"],description:"Delete an environment",args:[{name:"envitonment key",isDangerous:!0,generators:p,debounce:!0}]}]},{name:["flags","flag"],description:"Create, list, view, and delete flags",subcommands:[{name:["list","ls","l"],description:"List flags"},{name:"show",description:"View flag details",args:[{name:"flag key",generators:o,debounce:!0}]},{name:["create","new"],description:"Create a flag",args:[{name:"flag key"}]},{name:["create-toggle","new-toggle","create-boolean"],description:"Create a boolean flag",args:[{name:"flag key"}]},{name:"add-tag",description:"Add a tag to a flag",args:[{name:"flag key",generators:o,debounce:!0},{name:"tag"}]},{name:"remove-tag",description:"Remove a tag from a flag",args:[{name:"flag key",generators:o,debounce:!0},{name:"tag"}]},{name:"status",description:"Show flag's statuses",args:[{name:"flag key",generators:o,debounce:!0}]},{name:"on",description:"Turn a boolean flag on",args:[{name:"flag key",generators:o,debounce:!0}]},{name:"off",description:"Turn a boolean flag off",args:[{name:"flag key",generators:o,debounce:!0}]},{name:["delete","remove"],description:"Delete a flag",args:[{name:"flag key",isDangerous:!0,generators:o,debounce:!0}]}]},{name:"log",description:"Search audit log entries"}],options:[m,g]},y=k;export{y as default};
//# sourceMappingURL=data:application/json;base64,
