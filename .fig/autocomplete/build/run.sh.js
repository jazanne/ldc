var p="405BFF",f="A34FDE",i={script:"jq 'keys' ~/.config/ldc.json",postProcess:n=>JSON.parse(n).map(e=>({name:e,insertValue:e,description:e}))},m={script(n){let t="./run.sh projects list --json",e=a(n,s);e&&(t+=` --config ${e}`);let r=a(n,c);return r&&(t+=` --config-file ${r}`),t},postProcess(n){return JSON.parse(n).map(e=>({name:e.key,insertValue:e.key,description:e.name,icon:`fig://template?color=${p}&badge=P`}))}},l={script(n){let t="./run.sh environments list --json",e=a(n,s);e&&(t+=` --config ${e}`);let r=a(n,c);return r&&(t+=` --config-file ${r}`),t},postProcess(n){return JSON.parse(n).map(e=>({name:e.key,insertValue:e.key,description:e.name,icon:`fig://template?color=${e.color}&badge=E`}))}},o={script(n){let t="./run.sh flags list",e=a(n,s);e&&(t+=` --config ${e}`);let r=a(n,c);return r&&(t+=` --config-file ${r}`),t},postProcess(n){return n.split(`
`).reduce((t,e)=>{let r=e.match(/^\| (?<key>[^\s]+) +\| (?<name>.+\b)\s+\| (?<partialDescription>.+)\|/);if(r!==null){let{key:g,name:d}=r.groups;t.push({name:g,insertValue:g,description:d,icon:`fig://template?color=${f}&badge=\u2691`})}return t},[])}},a=(n,t)=>{let e=u(n,t);return e>-1?n[e+1]:""},u=(n,t)=>{for(let e of t.name){let r=n.indexOf(e);if(r>-1)return r}return-1},s={name:["--config"],description:"Configuration to use",args:[{name:"config name",generators:i}]},c={name:["--config-file"],description:"Configuration file to use",args:[{name:"config file path",template:"filepaths"}]},v={name:"ldc",description:"ldc is a command-line api client for LaunchDarkly",subcommands:[{name:"configs",description:"Manage configurations",subcommands:[{name:"add",description:"add config <config name> <api token> <project> <environment> [server url]",args:[{name:"config name"},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:"set",description:"Change configuration <config name>",args:[{name:"config name",generators:i}]},{name:["rename","rn","mv"],description:"Rename config <config name> <new name>",args:[{name:"config name",generators:i},{name:"new name"}]},{name:["edit","update"],description:"Update config: <config name> <api token> <project> <environment> [server url]",args:[{name:"config name",generators:i},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:["rm","remove","delete","del"],description:"Remove config: <config name>",args:[{name:"config name",generators:i}]}]},{name:"projects",description:"Create, list, view, and delete projects",subcommands:[{name:"list",description:"List projects"},{name:"show",description:"View project details",args:[{name:"project key",generators:m,debounce:!0}]},{name:["create","new"],description:"Create a project",args:[{name:"project key"}]},{name:["delete","remove"],description:"Delete a project",args:[{name:"project key",isDangerous:!0,generators:m,debounce:!0}]}]},{name:["environments","environment","envs","env","e"],description:"Create, list, view, and delete environments",subcommands:[{name:["list","ls","l"],description:"List environments"},{name:"show",description:"View environments details",args:[{name:"environments key",generators:l,debounce:!0}]},{name:["create","new","c"],description:"Create an environment",args:[{name:"project key"}]},{name:["delete","remove","d","del","rm"],description:"Delete an environment",args:[{name:"envitonment key",isDangerous:!0,generators:l,debounce:!0}]}]},{name:["flags","flag"],description:"Create, list, view, and delete flags",subcommands:[{name:["list","ls","l"],description:"List flags"},{name:"show",description:"View flag details",args:[{name:"flag key",generators:o,debounce:!0}]},{name:["create","new"],description:"Create a flag",args:[{name:"flag key"}]},{name:["create-toggle","new-toggle","create-boolean"],description:"Create a boolean flag",args:[{name:"flag key"}]},{name:"add-tag",description:"Add a tag to a flag",args:[{name:"flag key",generators:o,debounce:!0},{name:"tag"}]},{name:"remove-tag",description:"Remove a tag from a flag",args:[{name:"flag key",generators:o,debounce:!0},{name:"tag"}]},{name:"status",description:"Show flag's statuses",args:[{name:"flag key",generators:o,debounce:!0}]},{name:"on",description:"Turn a boolean flag on",args:[{name:"flag key",generators:o,debounce:!0}]},{name:"off",description:"Turn a boolean flag off",args:[{name:"flag key",generators:o,debounce:!0}]},{name:["delete","remove"],description:"Delete a flag",args:[{name:"flag key",isDangerous:!0,generators:o,debounce:!0}]}]},{name:"log",description:"Search audit log entries"}],options:[s,c,{name:"--json",description:"Return data as JSON"}]},k=v;export{k as default};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiLi4vc3JjL3J1bi5zaC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiaW50ZXJmYWNlIEJhc2VPYmplY3Qge1xuICBuYW1lOiBzdHJpbmcsXG4gIGtleTogc3RyaW5nXG59XG5cbmludGVyZmFjZSBXaXRoQ29sb3Ige1xuICBjb2xvcjogc3RyaW5nXG59XG5cbmludGVyZmFjZSBQcm9qZWN0IGV4dGVuZHMgQmFzZU9iamVjdCB7fVxuaW50ZXJmYWNlIEVudmlyb25tZW50IGV4dGVuZHMgQmFzZU9iamVjdCwgV2l0aENvbG9yIHt9XG5cbi8vIEJyYW5kIGNvbG9yc1xuY29uc3QgTERfQkxVRV9IRVggPSAnNDA1QkZGJztcbmNvbnN0IExEX1BVUlBMRV9IRVggPSAnQTM0RkRFJztcblxuY29uc3QgY29uZmlnTmFtZUdlbmVyYXRvcjogRmlnLkdlbmVyYXRvciA9IHtcbiAgLy9UT0RPIHRoaXMgc2hvdWxkIG9wdGlvbmFsbHkgdXNlIGEgY29uZmlnIHNwZWNpZmllZCB3aXRoIC0tY29uZmlnXG4gIHNjcmlwdDogXCJqcSAna2V5cycgfi8uY29uZmlnL2xkYy5qc29uXCIsXG4gIHBvc3RQcm9jZXNzOiAob3V0KSA9PiB7XG4gICAgY29uc3QgY29uZmlnczogQXJyYXk8c3RyaW5nPiA9IEpTT04ucGFyc2Uob3V0KTtcblxuICAgIHJldHVybiBjb25maWdzLm1hcDxGaWcuU3VnZ2VzdGlvbj4oKGl0ZW0pID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGl0ZW0sXG4gICAgICAgIGluc2VydFZhbHVlOiBpdGVtLFxuICAgICAgICBkZXNjcmlwdGlvbjogaXRlbSxcbiAgICAgIH07XG4gICAgfSk7XG4gIH1cbn07XG5cbmNvbnN0IHByb2plY3RHZW5lcmF0b3I6IEZpZy5HZW5lcmF0b3IgPSB7XG4gIHNjcmlwdChjb250ZXh0KSB7XG4gICAgbGV0IGNtZCA9ICcuL3J1bi5zaCBwcm9qZWN0cyBsaXN0IC0tanNvbic7XG4gICAgY29uc3QgY29uZmlnID0gZ2V0T3B0aW9uRnJvbUNvbnRleHQoY29udGV4dCwgY29uZmlnT3B0KTtcbiAgICBpZiAoY29uZmlnKSB7XG4gICAgICBjbWQgKz0gYCAtLWNvbmZpZyAke2NvbmZpZ31gO1xuICAgIH1cbiAgICBjb25zdCBjb25maWdGaWxlID0gZ2V0T3B0aW9uRnJvbUNvbnRleHQoY29udGV4dCwgY29uZmlnRmlsZU9wdCk7XG4gICAgaWYgKGNvbmZpZ0ZpbGUpIHtcbiAgICAgIGNtZCArPSBgIC0tY29uZmlnLWZpbGUgJHtjb25maWdGaWxlfWA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNtZDtcbiAgfSxcbiAgcG9zdFByb2Nlc3Mob3V0KSB7XG4gICAgY29uc3QgcHJvamVjdHM6IFByb2plY3RbXSA9IEpTT04ucGFyc2Uob3V0KTtcblxuICAgIHJldHVybiBwcm9qZWN0cy5tYXA8RmlnLlN1Z2dlc3Rpb24+KChpdGVtKSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBpdGVtLmtleSxcbiAgICAgICAgaW5zZXJ0VmFsdWU6IGl0ZW0ua2V5LFxuICAgICAgICBkZXNjcmlwdGlvbjogaXRlbS5uYW1lLFxuICAgICAgICBpY29uOiBgZmlnOi8vdGVtcGxhdGU/Y29sb3I9JHtMRF9CTFVFX0hFWH0mYmFkZ2U9UGBcbiAgICAgIH07XG4gICAgfSk7XG4gIH0sXG59O1xuXG5jb25zdCBlbnZpcm9ubWVudEdlbmVyYXRvcjogRmlnLkdlbmVyYXRvciA9IHtcbiAgc2NyaXB0KGNvbnRleHQpIHtcbiAgICBsZXQgY21kID0gJy4vcnVuLnNoIGVudmlyb25tZW50cyBsaXN0IC0tanNvbic7XG4gICAgY29uc3QgY29uZmlnID0gZ2V0T3B0aW9uRnJvbUNvbnRleHQoY29udGV4dCwgY29uZmlnT3B0KTtcbiAgICBpZiAoY29uZmlnKSB7XG4gICAgICBjbWQgKz0gYCAtLWNvbmZpZyAke2NvbmZpZ31gO1xuICAgIH1cbiAgICBjb25zdCBjb25maWdGaWxlID0gZ2V0T3B0aW9uRnJvbUNvbnRleHQoY29udGV4dCwgY29uZmlnRmlsZU9wdCk7XG4gICAgaWYgKGNvbmZpZ0ZpbGUpIHtcbiAgICAgIGNtZCArPSBgIC0tY29uZmlnLWZpbGUgJHtjb25maWdGaWxlfWA7XG4gICAgfVxuXG4gICAgcmV0dXJuIGNtZDtcbiAgfSxcbiAgcG9zdFByb2Nlc3Mob3V0KSB7XG4gICAgY29uc3QgZW52czogRW52aXJvbm1lbnRbXSA9IEpTT04ucGFyc2Uob3V0KTtcblxuICAgIHJldHVybiBlbnZzLm1hcDxGaWcuU3VnZ2VzdGlvbj4oKGl0ZW0pID0+IHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIG5hbWU6IGl0ZW0ua2V5LFxuICAgICAgICBpbnNlcnRWYWx1ZTogaXRlbS5rZXksXG4gICAgICAgIGRlc2NyaXB0aW9uOiBpdGVtLm5hbWUsXG4gICAgICAgIGljb246IGBmaWc6Ly90ZW1wbGF0ZT9jb2xvcj0ke2l0ZW0uY29sb3J9JmJhZGdlPUVgXG4gICAgICB9O1xuICAgIH0pO1xuICB9LFxufTtcblxuY29uc3QgZmxhZ0dlbmVyYXRvcjogRmlnLkdlbmVyYXRvciA9IHtcbiAgc2NyaXB0KGNvbnRleHQpIHtcbiAgICBsZXQgY21kID0gJy4vcnVuLnNoIGZsYWdzIGxpc3QnO1xuICAgIGNvbnN0IGNvbmZpZyA9IGdldE9wdGlvbkZyb21Db250ZXh0KGNvbnRleHQsIGNvbmZpZ09wdCk7XG4gICAgaWYgKGNvbmZpZykge1xuICAgICAgY21kICs9IGAgLS1jb25maWcgJHtjb25maWd9YDtcbiAgICB9XG4gICAgY29uc3QgY29uZmlnRmlsZSA9IGdldE9wdGlvbkZyb21Db250ZXh0KGNvbnRleHQsIGNvbmZpZ0ZpbGVPcHQpO1xuICAgIGlmIChjb25maWdGaWxlKSB7XG4gICAgICBjbWQgKz0gYCAtLWNvbmZpZy1maWxlICR7Y29uZmlnRmlsZX1gO1xuICAgIH1cblxuICAgIHJldHVybiBjbWQ7XG4gIH0sXG4gIHBvc3RQcm9jZXNzKG91dCkge1xuICAgIHJldHVybiBvdXQuc3BsaXQoXCJcXG5cIikucmVkdWNlKChhY2MsIGxpbmUpID0+IHtcbiAgICAgIGNvbnN0IG1hdGNoID0gbGluZS5tYXRjaChcbiAgICAgICAgL15cXHwgKD88a2V5PlteXFxzXSspICtcXHwgKD88bmFtZT4uK1xcYilcXHMrXFx8ICg/PHBhcnRpYWxEZXNjcmlwdGlvbj4uKylcXHwvXG4gICAgICApO1xuICBcbiAgICAgIGlmIChtYXRjaCAhPT0gbnVsbCkge1xuICAgICAgICBjb25zdCB7IGtleSwgbmFtZSB9ID0gbWF0Y2guZ3JvdXBzO1xuICAgICAgICBhY2MucHVzaCh7XG4gICAgICAgICAgbmFtZToga2V5LFxuICAgICAgICAgIGluc2VydFZhbHVlOiBrZXksXG4gICAgICAgICAgZGVzY3JpcHRpb246IG5hbWUsXG4gICAgICAgICAgaWNvbjogYGZpZzovL3RlbXBsYXRlP2NvbG9yPSR7TERfUFVSUExFX0hFWH0mYmFkZ2U9XHUyNjkxYFxuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGFjYztcbiAgICB9LCBbXSk7XG4gIH0sXG59O1xuXG5jb25zdCBnZXRPcHRpb25Gcm9tQ29udGV4dCA9IChjb250ZXh0LCBvcHRpb246IEZpZy5PcHRpb24pID0+IHtcbiAgY29uc3QgaW5kZXggPSBnZXRPcHRpb25JbmRleEZyb21Db250ZXh0KGNvbnRleHQsIG9wdGlvbik7XG4gIGNvbnN0IHZhbHVlID0gaW5kZXggPiAtMSA/IGNvbnRleHRbaW5kZXgrMV0gOiAnJztcblxuICByZXR1cm4gdmFsdWU7XG59XG5cbmNvbnN0IGdldE9wdGlvbkluZGV4RnJvbUNvbnRleHQgPSAoY29udGV4dCwgb3B0aW9uOiBGaWcuT3B0aW9uKSA9PiB7XG4gIGZvciAoY29uc3QgbmFtZSBvZiBvcHRpb24ubmFtZSkge1xuICAgIGNvbnN0IGlkeCA9IGNvbnRleHQuaW5kZXhPZihuYW1lKTtcbiAgICBpZiAoaWR4ID4gLTEpIHtcbiAgICAgIHJldHVybiBpZHg7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIC0xO1xufVxuXG5jb25zdCBjb25maWdPcHQ6IEZpZy5PcHRpb24gPSB7XG4gIG5hbWU6IFtcIi0tY29uZmlnXCJdLFxuICBkZXNjcmlwdGlvbjogXCJDb25maWd1cmF0aW9uIHRvIHVzZVwiLFxuICBhcmdzOiBbXG4gICAge1xuICAgICAgbmFtZTogXCJjb25maWcgbmFtZVwiLFxuICAgICAgZ2VuZXJhdG9yczogY29uZmlnTmFtZUdlbmVyYXRvcixcbiAgICB9LFxuICBdLFxufTtcblxuY29uc3QgY29uZmlnRmlsZU9wdDogRmlnLk9wdGlvbiA9IHtcbiAgbmFtZTogW1wiLS1jb25maWctZmlsZVwiXSxcbiAgZGVzY3JpcHRpb246IFwiQ29uZmlndXJhdGlvbiBmaWxlIHRvIHVzZVwiLFxuICBhcmdzOiBbXG4gICAge1xuICAgICAgbmFtZTogXCJjb25maWcgZmlsZSBwYXRoXCIsXG4gICAgICB0ZW1wbGF0ZTogXCJmaWxlcGF0aHNcIixcbiAgICB9LFxuICBdLFxufTtcblxuY29uc3QgY29tcGxldGlvblNwZWM6IEZpZy5TcGVjID0ge1xuICBuYW1lOiBcImxkY1wiLFxuICBkZXNjcmlwdGlvbjogXCJsZGMgaXMgYSBjb21tYW5kLWxpbmUgYXBpIGNsaWVudCBmb3IgTGF1bmNoRGFya2x5XCIsXG4gIHN1YmNvbW1hbmRzOiBbXG4gICAge1xuICAgICAgbmFtZTogXCJjb25maWdzXCIsXG4gICAgICBkZXNjcmlwdGlvbjogXCJNYW5hZ2UgY29uZmlndXJhdGlvbnNcIixcbiAgICAgIHN1YmNvbW1hbmRzOiBbXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcImFkZFwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcImFkZCBjb25maWcgPGNvbmZpZyBuYW1lPiA8YXBpIHRva2VuPiA8cHJvamVjdD4gPGVudmlyb25tZW50PiBbc2VydmVyIHVybF1cIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiY29uZmlnIG5hbWVcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiYXBpIHRva2VuXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBuYW1lOiBcInByb2plY3RcIixcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiZGVmYXVsdCBwcm9qZWN0IGtleVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJlbnZpcm9ubWVudFwiLFxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJkZWZhdWx0IGVudmlyb25tZW50IGtleVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJzZXJ2ZXIgdXJsXCIsXG4gICAgICAgICAgICAgIGlzT3B0aW9uYWw6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcInNldFwiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkNoYW5nZSBjb25maWd1cmF0aW9uIDxjb25maWcgbmFtZT5cIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiY29uZmlnIG5hbWVcIixcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogY29uZmlnTmFtZUdlbmVyYXRvcixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFtcInJlbmFtZVwiLCBcInJuXCIsIFwibXZcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiUmVuYW1lIGNvbmZpZyA8Y29uZmlnIG5hbWU+IDxuZXcgbmFtZT5cIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiY29uZmlnIG5hbWVcIixcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogY29uZmlnTmFtZUdlbmVyYXRvcixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwibmV3IG5hbWVcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFtcImVkaXRcIiwgXCJ1cGRhdGVcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVXBkYXRlIGNvbmZpZzogPGNvbmZpZyBuYW1lPiA8YXBpIHRva2VuPiA8cHJvamVjdD4gPGVudmlyb25tZW50PiBbc2VydmVyIHVybF1cIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiY29uZmlnIG5hbWVcIixcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogY29uZmlnTmFtZUdlbmVyYXRvcixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiYXBpIHRva2VuXCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBuYW1lOiBcInByb2plY3RcIixcbiAgICAgICAgICAgICAgZGVzY3JpcHRpb246IFwiZGVmYXVsdCBwcm9qZWN0IGtleVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJlbnZpcm9ubWVudFwiLFxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogXCJkZWZhdWx0IGVudmlyb25tZW50IGtleVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJzZXJ2ZXIgdXJsXCIsXG4gICAgICAgICAgICAgIGlzT3B0aW9uYWw6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBbXCJybVwiLCBcInJlbW92ZVwiLCBcImRlbGV0ZVwiLCBcImRlbFwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJSZW1vdmUgY29uZmlnOiA8Y29uZmlnIG5hbWU+XCIsXG4gICAgICAgICAgYXJnczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBuYW1lOiBcImNvbmZpZyBuYW1lXCIsXG4gICAgICAgICAgICAgIGdlbmVyYXRvcnM6IGNvbmZpZ05hbWVHZW5lcmF0b3IsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogXCJwcm9qZWN0c1wiLFxuICAgICAgZGVzY3JpcHRpb246IFwiQ3JlYXRlLCBsaXN0LCB2aWV3LCBhbmQgZGVsZXRlIHByb2plY3RzXCIsXG4gICAgICBzdWJjb21tYW5kczogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJsaXN0XCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiTGlzdCBwcm9qZWN0c1wiLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJzaG93XCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVmlldyBwcm9qZWN0IGRldGFpbHNcIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwicHJvamVjdCBrZXlcIixcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogcHJvamVjdEdlbmVyYXRvcixcbiAgICAgICAgICAgICAgZGVib3VuY2U6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBbXCJjcmVhdGVcIiwgXCJuZXdcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiQ3JlYXRlIGEgcHJvamVjdFwiLFxuICAgICAgICAgIGFyZ3M6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJwcm9qZWN0IGtleVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogW1wiZGVsZXRlXCIsIFwicmVtb3ZlXCJdLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkRlbGV0ZSBhIHByb2plY3RcIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwicHJvamVjdCBrZXlcIixcbiAgICAgICAgICAgICAgaXNEYW5nZXJvdXM6IHRydWUsXG4gICAgICAgICAgICAgIGdlbmVyYXRvcnM6IHByb2plY3RHZW5lcmF0b3IsXG4gICAgICAgICAgICAgIGRlYm91bmNlOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IFtcImVudmlyb25tZW50c1wiLCBcImVudmlyb25tZW50XCIsIFwiZW52c1wiLCBcImVudlwiLCBcImVcIl0sXG4gICAgICBkZXNjcmlwdGlvbjogXCJDcmVhdGUsIGxpc3QsIHZpZXcsIGFuZCBkZWxldGUgZW52aXJvbm1lbnRzXCIsXG4gICAgICBzdWJjb21tYW5kczogW1xuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogW1wibGlzdFwiLCBcImxzXCIsIFwibFwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJMaXN0IGVudmlyb25tZW50c1wiLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJzaG93XCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVmlldyBlbnZpcm9ubWVudHMgZGV0YWlsc1wiLFxuICAgICAgICAgIGFyZ3M6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJlbnZpcm9ubWVudHMga2V5XCIsXG4gICAgICAgICAgICAgIGdlbmVyYXRvcnM6IGVudmlyb25tZW50R2VuZXJhdG9yLFxuICAgICAgICAgICAgICBkZWJvdW5jZTogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFtcImNyZWF0ZVwiLCBcIm5ld1wiLCBcImNcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiQ3JlYXRlIGFuIGVudmlyb25tZW50XCIsXG4gICAgICAgICAgYXJnczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBuYW1lOiBcInByb2plY3Qga2V5XCIsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBbXCJkZWxldGVcIiwgXCJyZW1vdmVcIiwgXCJkXCIsIFwiZGVsXCIsIFwicm1cIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiRGVsZXRlIGFuIGVudmlyb25tZW50XCIsXG4gICAgICAgICAgYXJnczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBuYW1lOiBcImVudml0b25tZW50IGtleVwiLFxuICAgICAgICAgICAgICBpc0Rhbmdlcm91czogdHJ1ZSxcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogZW52aXJvbm1lbnRHZW5lcmF0b3IsXG4gICAgICAgICAgICAgIGRlYm91bmNlOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgXSxcbiAgICB9LFxuICAgIHtcbiAgICAgIG5hbWU6IFtcImZsYWdzXCIsIFwiZmxhZ1wiXSxcbiAgICAgIGRlc2NyaXB0aW9uOiBcIkNyZWF0ZSwgbGlzdCwgdmlldywgYW5kIGRlbGV0ZSBmbGFnc1wiLFxuICAgICAgc3ViY29tbWFuZHM6IFtcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFtcImxpc3RcIiwgXCJsc1wiLCBcImxcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiTGlzdCBmbGFnc1wiLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJzaG93XCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVmlldyBmbGFnIGRldGFpbHNcIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiZmxhZyBrZXlcIixcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogZmxhZ0dlbmVyYXRvcixcbiAgICAgICAgICAgICAgZGVib3VuY2U6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBbXCJjcmVhdGVcIiwgXCJuZXdcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiQ3JlYXRlIGEgZmxhZ1wiLFxuICAgICAgICAgIGFyZ3M6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJmbGFnIGtleVwiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogW1wiY3JlYXRlLXRvZ2dsZVwiLCBcIm5ldy10b2dnbGVcIiwgXCJjcmVhdGUtYm9vbGVhblwiXSxcbiAgICAgICAgICBkZXNjcmlwdGlvbjogXCJDcmVhdGUgYSBib29sZWFuIGZsYWdcIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiZmxhZyBrZXlcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFwiYWRkLXRhZ1wiLFxuICAgICAgICAgIGRlc2NyaXB0aW9uOiBcIkFkZCBhIHRhZyB0byBhIGZsYWdcIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiZmxhZyBrZXlcIixcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogZmxhZ0dlbmVyYXRvcixcbiAgICAgICAgICAgICAgZGVib3VuY2U6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBuYW1lOiBcInRhZ1wiLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICBdLFxuICAgICAgICB9LFxuICAgICAgICB7XG4gICAgICAgICAgbmFtZTogXCJyZW1vdmUtdGFnXCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiUmVtb3ZlIGEgdGFnIGZyb20gYSBmbGFnXCIsXG4gICAgICAgICAgYXJnczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBuYW1lOiBcImZsYWcga2V5XCIsXG4gICAgICAgICAgICAgIGdlbmVyYXRvcnM6IGZsYWdHZW5lcmF0b3IsXG4gICAgICAgICAgICAgIGRlYm91bmNlOiB0cnVlLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJ0YWdcIixcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFwic3RhdHVzXCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiU2hvdyBmbGFnJ3Mgc3RhdHVzZXNcIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiZmxhZyBrZXlcIixcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogZmxhZ0dlbmVyYXRvcixcbiAgICAgICAgICAgICAgZGVib3VuY2U6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBcIm9uXCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVHVybiBhIGJvb2xlYW4gZmxhZyBvblwiLFxuICAgICAgICAgIGFyZ3M6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJmbGFnIGtleVwiLFxuICAgICAgICAgICAgICBnZW5lcmF0b3JzOiBmbGFnR2VuZXJhdG9yLFxuICAgICAgICAgICAgICBkZWJvdW5jZTogdHJ1ZSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgXSxcbiAgICAgICAgfSxcbiAgICAgICAge1xuICAgICAgICAgIG5hbWU6IFwib2ZmXCIsXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiVHVybiBhIGJvb2xlYW4gZmxhZyBvZmZcIixcbiAgICAgICAgICBhcmdzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgIG5hbWU6IFwiZmxhZyBrZXlcIixcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogZmxhZ0dlbmVyYXRvcixcbiAgICAgICAgICAgICAgZGVib3VuY2U6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICAgIHtcbiAgICAgICAgICBuYW1lOiBbXCJkZWxldGVcIiwgXCJyZW1vdmVcIl0sXG4gICAgICAgICAgZGVzY3JpcHRpb246IFwiRGVsZXRlIGEgZmxhZ1wiLFxuICAgICAgICAgIGFyZ3M6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgbmFtZTogXCJmbGFnIGtleVwiLFxuICAgICAgICAgICAgICBpc0Rhbmdlcm91czogdHJ1ZSxcbiAgICAgICAgICAgICAgZ2VuZXJhdG9yczogZmxhZ0dlbmVyYXRvcixcbiAgICAgICAgICAgICAgZGVib3VuY2U6IHRydWUsXG4gICAgICAgICAgICB9LFxuICAgICAgICAgIF0sXG4gICAgICAgIH0sXG4gICAgICBdLFxuICAgIH0sXG4gICAge1xuICAgICAgbmFtZTogXCJsb2dcIixcbiAgICAgIGRlc2NyaXB0aW9uOiBcIlNlYXJjaCBhdWRpdCBsb2cgZW50cmllc1wiLFxuICAgIH0sXG4gIF0sXG4gIG9wdGlvbnM6IFtcbiAgICBjb25maWdPcHQsXG4gICAgY29uZmlnRmlsZU9wdCxcbiAgICB7XG4gICAgICBuYW1lOiBcIi0tanNvblwiLFxuICAgICAgZGVzY3JpcHRpb246IFwiUmV0dXJuIGRhdGEgYXMgSlNPTlwiLFxuICAgIH1cbiAgXSxcbn07XG5leHBvcnQgZGVmYXVsdCBjb21wbGV0aW9uU3BlYzsiXSwKICAibWFwcGluZ3MiOiAiQUFhQSxHQUFNLEdBQWMsU0FDZCxFQUFnQixTQUVoQixFQUFxQyxDQUV6QyxPQUFRLCtCQUNSLFlBQWEsQUFBQyxHQUdMLEFBRndCLEtBQUssTUFBTSxHQUUzQixJQUFvQixBQUFDLEdBQzNCLEVBQ0wsS0FBTSxFQUNOLFlBQWEsRUFDYixZQUFhLE1BTWYsRUFBa0MsQ0FDdEMsT0FBTyxFQUFTLENBQ2QsR0FBSSxHQUFNLGdDQUNKLEVBQVMsRUFBcUIsRUFBUyxHQUM3QyxBQUFJLEdBQ0YsSUFBTyxhQUFhLEtBRXRCLEdBQU0sR0FBYSxFQUFxQixFQUFTLEdBQ2pELE1BQUksSUFDRixJQUFPLGtCQUFrQixLQUdwQixHQUVULFlBQVksRUFBSyxDQUdmLE1BQU8sQUFGcUIsTUFBSyxNQUFNLEdBRXZCLElBQW9CLEFBQUMsR0FDNUIsRUFDTCxLQUFNLEVBQUssSUFDWCxZQUFhLEVBQUssSUFDbEIsWUFBYSxFQUFLLEtBQ2xCLEtBQU0sd0JBQXdCLGlCQU1oQyxFQUFzQyxDQUMxQyxPQUFPLEVBQVMsQ0FDZCxHQUFJLEdBQU0sb0NBQ0osRUFBUyxFQUFxQixFQUFTLEdBQzdDLEFBQUksR0FDRixJQUFPLGFBQWEsS0FFdEIsR0FBTSxHQUFhLEVBQXFCLEVBQVMsR0FDakQsTUFBSSxJQUNGLElBQU8sa0JBQWtCLEtBR3BCLEdBRVQsWUFBWSxFQUFLLENBR2YsTUFBTyxBQUZxQixNQUFLLE1BQU0sR0FFM0IsSUFBb0IsQUFBQyxHQUN4QixFQUNMLEtBQU0sRUFBSyxJQUNYLFlBQWEsRUFBSyxJQUNsQixZQUFhLEVBQUssS0FDbEIsS0FBTSx3QkFBd0IsRUFBSyxxQkFNckMs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V0FBWSxFQUNaLFNBQVUsTUFJaEIsQ0FDRSxLQUFNLENBQUMsU0FBVSxNQUFPLEtBQ3hCLFlBQWEsd0JBQ2IsS0FBTSxDQUNKLENBQ0UsS0FBTSxpQkFJWixDQUNFLEtBQU0sQ0FBQyxTQUFVLFNBQVUsSUFBSyxNQUFPLE1BQ3ZDLFlBQWEsd0JBQ2IsS0FBTSxDQUNKLENBQ0UsS0FBTSxrQkFDTixZQUFhLEdBQ2IsV0FBWSxFQUNaLFNBQVUsUUFNcEIsQ0FDRSxLQUFNLENBQUMsUUFBUyxRQUNoQixZQUFhLHVDQUNiLFlBQWEsQ0FDWCxDQUNFLEtBQU0sQ0FBQyxPQUFRLEtBQU0sS0FDckIsWUFBYSxjQUVmLENBQ0UsS0FBTSxPQUNOLFlBQWEsb0JBQ2IsS0FBTSxDQUNKLENBQ0UsS0FBTSxXQUNOLFdBQVksRUFDWixTQUFVLE1BSWhCLENBQ0UsS0FBTSxDQUFDLFNBQVUsT0FDakIsWUFBYSxnQkFDYixLQUFNLENBQ0osQ0FDRSxLQUFNLGNBSVosQ0FDRSxLQUFNLENBQUMsZ0JBQWlCLGFBQWMsa0JBQ3RDLFlBQWEsd0JBQ2IsS0FBTSxDQUNKLENBQ0UsS0FBTSxjQUlaLENBQ0UsS0FBTSxVQUNOLFlBQWEsc0JBQ2IsS0FBTSxDQUNKLENBQ0UsS0FBTSxXQUNOLFdBQVksRUFDWixTQUFVLElBRVosQ0FDRSxLQUFNLFNBSVosQ0FDRSxLQUFNLGFBQ04sWUFBYSwyQkFDYixLQUFNLENBQ0osQ0FDRSxLQUFNLFdBQ04sV0FBWSxFQUNaLFNBQVUsSUFFWixDQUNFLEtBQU0sU0FJWixDQUNFLEtBQU0sU0FDTixZQUFhLHVCQUNiLEtBQU0sQ0FDSixDQUNFLEtBQU0sV0FDTixXQUFZLEVBQ1osU0FBVSxNQUloQixDQUNFLEtBQU0sS0FDTixZQUFhLHlCQUNiLEtBQU0sQ0FDSixDQUNFLEtBQU0sV0FDTixXQUFZLEVBQ1osU0FBVSxNQUloQixDQUNFLEtBQU0sTUFDTixZQUFhLDBCQUNiLEtBQU0sQ0FDSixDQUNFLEtBQU0sV0FDTixXQUFZLEVBQ1osU0FBVSxNQUloQixDQUNFLEtBQU0sQ0FBQyxTQUFVLFVBQ2pCLFlBQWEsZ0JBQ2IsS0FBTSxDQUNKLENBQ0UsS0FBTSxXQUNOLFlBQWEsR0FDYixXQUFZLEVBQ1osU0FBVSxRQU1wQixDQUNFLEtBQU0sTUFDTixZQUFhLDZCQUdqQixRQUFTLENBQ1AsRUFDQSxFQUNBLENBQ0UsS0FBTSxTQUNOLFlBQWEseUJBSVosRUFBUSIsCiAgIm5hbWVzIjogW10KfQo=
