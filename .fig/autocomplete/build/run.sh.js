var d="405BFF",l="3DD6F5",i={script:"jq 'keys' ~/.config/ldc.json",postProcess:t=>JSON.parse(t).map(n=>({name:n,insertValue:n,description:n}))},p={script(t){let e="./run.sh projects list",n=a(t,c);n&&(e+=` --config ${n}`);let o=a(t,m);return o&&(e+=` --config-file ${o}`),e},postProcess(t){return t.split(`
`).reduce((e,n)=>{let o=n.match(/^\| (?<key>[^\s]+) +\| (?<name>.+\b)\s+\|$/);if(o!==null){let{key:r,name:s}=o.groups;e.push({name:r,insertValue:r,description:s,icon:`fig://template?color=${d}&badge=P`})}return e},[])}},g={script(t){let e="./run.sh environments list",n=a(t,c);n&&(e+=` --config ${n}`);let o=a(t,m);return o&&(e+=` --config-file ${o}`),e},postProcess(t){return t.split(`
`).reduce((e,n)=>{let o=n.match(/^\| (?<key>[^\s]+) +\| (?<name>.+\b)\s+\|$/);if(o!==null){let{key:r,name:s}=o.groups;e.push({name:r,insertValue:r,description:s,icon:`fig://template?color=${l}&badge=E`})}return e},[])}},a=(t,e)=>{let n=u(t,e);return n>-1?t[n+1]:""},u=(t,e)=>{for(let n of e.name){let o=t.indexOf(n);if(o>-1)return o}return-1},c={name:["--config"],description:"Configuration to use",args:[{name:"config name",generators:i}]},m={name:["--config-file"],description:"Configuration file to use",args:[{name:"config file path",template:"filepaths"}]},f={name:"ldc",description:"ldc is a command-line api client for LaunchDarkly",subcommands:[{name:"configs",description:"Manage configurations",subcommands:[{name:"add",description:"add config <config name> <api token> <project> <environment> [server url]",args:[{name:"config name"},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:"set",description:"Change configuration <config name>",args:[{name:"config name",generators:i}]},{name:["rename","rn","mv"],description:"Rename config <config name> <new name>",args:[{name:"config name",generators:i},{name:"new name"}]},{name:["edit","update"],description:"Update config: <config name> <api token> <project> <environment> [server url]",args:[{name:"config name",generators:i},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:["rm","remove","delete","del"],description:"Remove config: <config name>",args:[{name:"config name",generators:i}]}]},{name:"projects",description:"Create, list, view, and delete projects",subcommands:[{name:"list",description:"List projects"},{name:"show",description:"View project details",args:[{name:"project key",generators:p,debounce:!0}]},{name:["create","new"],description:"Create a project",args:[{name:"project key"}]},{name:["delete","remove"],description:"Delete a project",args:[{name:"project key",isDangerous:!0,generators:p,debounce:!0}]}]},{name:["environments","environment","envs","env","e"],description:"Create, list, view, and delete environments",subcommands:[{name:["list","ls","l"],description:"List environments"},{name:"show",description:"View environments details",args:[{name:"environments key",generators:g,debounce:!0}]},{name:["create","new","c"],description:"Create an environment",args:[{name:"project key"}]},{name:["delete","remove","d","del","rm"],description:"Delete an environment",args:[{name:"envitonment key",isDangerous:!0,generators:g,debounce:!0}]}]}],options:[c,m]},v=f;export{v as default};
//# sourceMappingURL=data:application/json;base64,
