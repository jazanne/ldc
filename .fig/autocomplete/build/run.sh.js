var p="405BFF",f="A34FDE",i={script(t){let n="jq 'keys'";return n+=` ${a(t,s)||"~/.config/ldc.json"}`,n},postProcess:t=>JSON.parse(t).map(e=>({name:e,insertValue:e,description:e}))},m={script(t){let n="./run.sh projects list --json",e=a(t,c);e&&(n+=` --config ${e}`);let r=a(t,s);return r&&(n+=` --config-file ${r}`),n},postProcess(t){return JSON.parse(t).map(e=>({name:e.key,insertValue:e.key,description:e.name,icon:`fig://template?color=${p}&badge=P`}))}},l={script(t){let n="./run.sh environments list --json",e=a(t,c);e&&(n+=` --config ${e}`);let r=a(t,s);return r&&(n+=` --config-file ${r}`),n},postProcess(t){return JSON.parse(t).map(e=>({name:e.key,insertValue:e.key,description:e.name,icon:`fig://template?color=${e.color}&badge=E`}))}},o={script(t){let n="./run.sh flags list",e=a(t,c);e&&(n+=` --config ${e}`);let r=a(t,s);return r&&(n+=` --config-file ${r}`),n},postProcess(t){return t.split(`
`).reduce((n,e)=>{let r=e.match(/^\| (?<key>[^\s]+) +\| (?<name>.+\b)\s+\| (?<partialDescription>.+)\|/);if(r!==null){let{key:g,name:d}=r.groups;n.push({name:g,insertValue:g,description:d,icon:`fig://template?color=${f}&badge=\u2691`})}return n},[])}},a=(t,n)=>{let e=u(t,n);return e>-1?t[e+1]:""},u=(t,n)=>{for(let e of n.name){let r=t.indexOf(e);if(r>-1)return r}return-1},c={name:["--config"],description:"Configuration to use",args:[{name:"config name",generators:i}]},s={name:["--config-file"],description:"Configuration file to use",args:[{name:"config file path",template:"filepaths"}]},v={name:"ldc",description:"ldc is a command-line api client for LaunchDarkly",subcommands:[{name:"configs",description:"Manage configurations",subcommands:[{name:"add",description:"add config <config name> <api token> <project> <environment> [server url]",args:[{name:"config name"},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:"set",description:"Change configuration <config name>",args:[{name:"config name",generators:i}]},{name:["rename","rn","mv"],description:"Rename config <config name> <new name>",args:[{name:"config name",generators:i},{name:"new name"}]},{name:["edit","update"],description:"Update config: <config name> <api token> <project> <environment> [server url]",args:[{name:"config name",generators:i},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:["rm","remove","delete","del"],description:"Remove config: <config name>",args:[{name:"config name",generators:i}]}]},{name:"projects",description:"Create, list, view, and delete projects",subcommands:[{name:"list",description:"List projects"},{name:"show",description:"View project details",args:[{name:"project key",generators:m,debounce:!0}]},{name:["create","new"],description:"Create a project",args:[{name:"project key"}]},{name:["delete","remove"],description:"Delete a project",args:[{name:"project key",isDangerous:!0,generators:m,debounce:!0}]}]},{name:["environments","environment","envs","env","e"],description:"Create, list, view, and delete environments",subcommands:[{name:["list","ls","l"],description:"List environments"},{name:"show",description:"View environments details",args:[{name:"environments key",generators:l,debounce:!0}]},{name:["create","new","c"],description:"Create an environment",args:[{name:"project key"}]},{name:["delete","remove","d","del","rm"],description:"Delete an environment",args:[{name:"envitonment key",isDangerous:!0,generators:l,debounce:!0}]}]},{name:["flags","flag"],description:"Create, list, view, and delete flags",subcommands:[{name:["list","ls","l"],description:"List flags"},{name:"show",description:"View flag details",args:[{name:"flag key",generators:o,debounce:!0}]},{name:["create","new"],description:"Create a flag",args:[{name:"flag key"}]},{name:["create-toggle","new-toggle","create-boolean"],description:"Create a boolean flag",args:[{name:"flag key"}]},{name:"add-tag",description:"Add a tag to a flag",args:[{name:"flag key",generators:o,debounce:!0},{name:"tag"}]},{name:"remove-tag",description:"Remove a tag from a flag",args:[{name:"flag key",generators:o,debounce:!0},{name:"tag"}]},{name:"status",description:"Show flag's statuses",args:[{name:"flag key",generators:o,debounce:!0}]},{name:"on",description:"Turn a boolean flag on",args:[{name:"flag key",generators:o,debounce:!0}]},{name:"off",description:"Turn a boolean flag off",args:[{name:"flag key",generators:o,debounce:!0}]},{name:["delete","remove"],description:"Delete a flag",args:[{name:"flag key",isDangerous:!0,generators:o,debounce:!0}]}]},{name:"log",description:"Search audit log entries"}],options:[c,s,{name:"--json",description:"Return data as JSON"}]},k=v;export{k as default};
//# sourceMappingURL=data:application/json;base64,
