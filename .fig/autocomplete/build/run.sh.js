var g="405BFF",i={script:"jq 'keys' ~/.config/ldc.json",postProcess:n=>JSON.parse(n).map(e=>({name:e,insertValue:e,description:e}))},a={script(n){let o="./run.sh projects list",e=s(n,c);e&&(o+=` --config ${e}`);let t=s(n,m);return t&&(o+=` --config-file ${t}`),o},postProcess(n){return n.split(`
`).reduce((o,e)=>{let t=e.match(/^\| (?<key>[^\s]+) +\| (?<name>.+\b)\s+\|$/);if(t!==null){let{key:r,name:p}=t.groups;o.push({name:r,insertValue:r,description:p,icon:`fig://template?color=${g}&badge=P`})}return o},[])}},s=(n,o)=>{let e=d(n,o);return e>-1?n[e+1]:""},d=(n,o)=>{for(let e of o.name){let t=n.indexOf(e);if(t>-1)return t}return-1},c={name:["--config"],description:"Configuration to use",args:[{name:"config name",generators:i}]},m={name:["--config-file"],description:"Configuration file to use",args:[{name:"config file path",template:"filepaths"}]},f={name:"ldc",description:"ldc is a command-line api client for LaunchDarkly",subcommands:[{name:"configs",description:"Manage configurations",subcommands:[{name:"add",description:"add config <config name> <api token> <project> <environment> [server url]",args:[{name:"config name"},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:"set",description:"Change configuration <config name>",args:[{name:"config name",generators:i}]},{name:["rename","rn","mv"],description:"Rename config <config name> <new name>",args:[{name:"config name",generators:i},{name:"new name"}]},{name:["edit","update"],description:"Update config: <config name> <api token> <project> <environment> [server url]",args:[{name:"config name",generators:i},{name:"api token"},{name:"project",description:"default project key"},{name:"environment",description:"default environment key"},{name:"server url",isOptional:!0}]},{name:["rm","remove","delete","del"],description:"Remove config: <config name>",args:[{name:"config name",generators:i}]}]},{name:"projects",description:"Create, list, view, and delete projects",subcommands:[{name:"list",description:"List projects"},{name:"show",description:"View project details",args:[{name:"project key",generators:a,debounce:!0}]},{name:["create","new"],description:"Create a project",args:[{name:"project key"}]},{name:["delete","remove"],description:"Delete a project",args:[{name:"project key",isDangerous:!0,generators:a,debounce:!0}]}]}],options:[c,m]},u=f;export{u as default};
//# sourceMappingURL=data:application/json;base64,
